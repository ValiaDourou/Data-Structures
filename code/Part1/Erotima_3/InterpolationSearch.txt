#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sys/time.h>

int found = 0 ; 


// If x is present in arr[0..n-1], then returns
// index of it, else returns -1.
void interpolationSearch(int arr[], int lo, int hi,  int x,int volume[])
{
    int pos;
    // Since array is sorted, an element present
    // in array must be in range defined by corner
    if (lo <= hi && x >= arr[lo] && x <= arr[hi]) {
        // Probing the position with keeping
        // uniform distribution in mind.
        pos = lo + (((double)(hi - lo) / (arr[hi] - arr[lo])) * (x - arr[lo]));
 
        // Condition of target found
        if (arr[pos] == x)
           {
           	
            					found = 1 ;
								printf("Volume : %d", volume[pos]);
			} 
 
        // If x is larger, x is in right sub array
        if (arr[pos] < x)
            return interpolationSearch(arr, pos + 1, hi, x,volume);
 
        // If x is smaller, x is in left sub array
        if (arr[pos] > x)
            return interpolationSearch(arr, lo, pos - 1, x,volume);
    }
   
}
 



int main()
{
    FILE *fp;
    int count = 0 , h = 0;
    char c;
    
    fp = fopen("agn.us.txt", "r");							//Anoigoume to arxeio
    
	if (fp == NULL)											//An den yparxei arxeio
    {
        printf("Could not open file");
        return 0;
    }
   
   
    for (c = getc(fp); c != EOF; c = getc(fp))				//Me to EOF anixneuetai to telos tou file. Count metraei to plithos twn grammwn mexri to telos tou file
	{
        if (c == '\n')
		{
            count = count + 1;
	    }
	}
   
  
   
    fclose(fp);
    char str[count][65];									//Apothikefsh kathe grammhs se ena string array
  
    
    
	fp = fopen("agn.us.txt", "r");
    
	for (h=0; h <=count; h++)
    {
	fscanf (fp, "%s", str[h]);
	}

    char *d , *da , date[count][15] , year[5] , month[3] ,day[3] , date1[15];								//Arxikopoihsh pinaka gia th sthlh date
    int j=0,i=0;
    const char s[2] = "," , s1[2] = "-";
    int volume[count] ,  dateInt[count];
										
    
 
    
	for (h=1; h<count; h++)									//For loop gia thn apothikefsh twn 2 zhtoumenwn sthlwn 
	{														//stous parapanw pinakes kanontas split se kathe komma tis grammes
    	d = strtok(str[h], s);
   		strcpy(date[h],d);
		d=strtok(NULL,s);
  		d=strtok(NULL,s);
  		d=strtok(NULL,s);
  		d=strtok(NULL,s);
  		d=strtok(NULL,s);
  	   volume[h] = atoi(d);
   	}
   
   
   for(h=1 ; h <count ; h ++)
{

	   	da = strtok(date[h],s1);
    	strcpy(year,da); // pairnei ton xrono
    	da = strtok(NULL,s1);
    	strcpy(month,da); // pairnei ton mhna
	   	da = strtok(NULL," ");
    	strcpy(day,da); // pairnei thn mera

	strcpy(date1,year);
	strcat(date1,month);
	strcat(date1,day);
	dateInt[h] = atoi(date1);

	
	}	
	  




printf("Give a date : ");
scanf("%s",date1);




da = strtok(date1,s1);
    	strcpy(year,da); // pairnei ton xrono
    	da = strtok(NULL,s1);
    	strcpy(month,da); // pairnei ton mhna
	   	da = strtok(NULL," ");
    	strcpy(day,da); // pairnei thn mera

	strcpy(date1,year);
	strcat(date1,month);
	strcat(date1,day);
	int dateI = atoi(date1);
	



 struct timeval start, end;
    gettimeofday(&start, NULL);
  interpolationSearch(dateInt,1,count-1, dateI,volume);
    gettimeofday(&end, NULL);
    double time_taken;
    time_taken = (end.tv_sec - start.tv_sec) * 1e6;
    time_taken = (time_taken + (end.tv_usec - start.tv_usec)) * 1e-6;


while (found ==0)

{
	printf("Date not found ");
	printf("\nGive a date : ");
scanf("%s",date1);




da = strtok(date1,s1);
    	strcpy(year,da); // pairnei ton xrono
    	da = strtok(NULL,s1);
    	strcpy(month,da); // pairnei ton mhna
	   	da = strtok(NULL," ");
    	strcpy(day,da); // pairnei thn mera

	strcpy(date1,year);
	strcat(date1,month);
	strcat(date1,day);
	int dateI = atoi(date1);



 struct timeval start, end;
    gettimeofday(&start, NULL);
  interpolationSearch(dateInt,1,count-1, dateI,volume);
    gettimeofday(&end, NULL);
    double time_taken;
    time_taken = (end.tv_sec - start.tv_sec) * 1e6;
    time_taken = (time_taken + (end.tv_usec - start.tv_usec)) * 1e-6;

}

printf("\nTime measured: %.6f seconds.\n", time_taken);
 
 
 
		
fclose(fp);

return 0;


}